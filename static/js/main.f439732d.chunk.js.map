{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","onTabSelected","selectedTabId","tabs","selectedTab","find","id","className","map","tab","title","classNames","href","onClick","handleTabChange","content","App","useState","tabId","setTabId","ReactDOM","render","document","getElementById"],"mappings":"kNAYaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,cACAC,EAEI,EAFJA,cACAC,EACI,EADJA,KAEMC,EAAcD,EAAKE,MAAK,qBAAGC,KAAgBJ,MAAkBC,EAAK,GAQxE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKI,UAAU,gBAAf,SACE,6BAEIJ,EAAKK,KAAI,SAACC,GACR,IAAQH,EAAcG,EAAdH,GAAII,EAAUD,EAAVC,MAEZ,OACE,oBAEEH,UAAWI,IAAW,CACpB,YAAaL,IAAOF,EAAYE,KAElC,UAAQ,MALV,SAOE,mBACEM,KAAI,WAAMN,GACV,UAAQ,UACRO,QAAS,kBAzBH,SAACJ,GACnBA,EAAIH,KAAOF,EAAYE,IACzBL,EAAcQ,GAuBeK,CAAgBL,IAHjC,SAKGC,KAXEJ,UAoBjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGH,EAAYW,cCjDRZ,EAAc,CACzB,CAAEG,GAAI,QAASI,MAAO,QAASK,QAAS,eACxC,CAAET,GAAI,QAASI,MAAO,QAASK,QAAS,eACxC,CAAET,GAAI,QAASI,MAAO,QAASK,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0BC,mBAASd,EAAK,GAAGG,IAA3C,mBAAOY,EAAP,KAAcC,EAAd,KAMMf,EAAcD,EAAKE,MAAK,qBAAGC,KAAgBY,MAAUf,EAAK,GAEhE,OACE,sBAAKI,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBH,EAAYM,SAGlC,cAAC,EAAD,CACET,cAbgB,SAACQ,GACrBU,EAASV,EAAIH,KAaTJ,cAAegB,EACff,KAAMA,QC5BdiB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f439732d.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Tab } from '../../types/Tab';\n\ntype Callback = (id: Tab) => void;\n\ntype Props = {\n  onTabSelected: Callback,\n  selectedTabId: string,\n  tabs: Tab[],\n};\n\nexport const Tabs: React.FC<Props> = ({\n  onTabSelected,\n  selectedTabId,\n  tabs,\n}) => {\n  const selectedTab = tabs.find(({ id }) => id === selectedTabId) || tabs[0];\n\n  const handleTabChange = (tab: Tab) => {\n    if (tab.id !== selectedTab.id) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {\n            tabs.map((tab) => {\n              const { id, title } = tab;\n\n              return (\n                <li\n                  key={id}\n                  className={classNames({\n                    'is-active': id === selectedTab.id,\n                  })}\n                  data-cy=\"Tab\"\n                >\n                  <a\n                    href={`#${id}`}\n                    data-cy=\"TabLink\"\n                    onClick={() => handleTabChange(tab)}\n                  >\n                    {title}\n                  </a>\n                </li>\n              );\n            })\n          }\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [tabId, setTabId] = useState(tabs[0].id);\n\n  const onTabSelected = (tab: Tab) => {\n    setTabId(tab.id);\n  };\n\n  const selectedTab = tabs.find(({ id }) => id === tabId) || tabs[0];\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        onTabSelected={onTabSelected}\n        selectedTabId={tabId}\n        tabs={tabs}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}